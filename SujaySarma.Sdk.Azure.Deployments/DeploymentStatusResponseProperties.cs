using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using System;
using System.Collections.Generic;

namespace SujaySarma.Sdk.Azure.Deployments
{
    /// <summary>
    /// Properties of a deployment status response
    /// </summary>
    public class DeploymentStatusResponseProperties
    {
        /// <summary>
        /// Template hash
        /// </summary>
        [JsonProperty("templateHash")]
        public string? TemplateHash { get; set; }

        /// <summary>
        /// Input parameter values (as defined in the template). Mutually exclusive with ParametersURI
        /// </summary>
        [JsonProperty("parameters")]
        public object? Parameters { get; set; }

        /// <summary>
        /// Mode of deployment
        /// </summary>
        [JsonProperty("mode"), JsonConverter(typeof(StringEnumConverter))]
        public DeploymentTypesEnum Mode { get; set; } = DeploymentTypesEnum.Incremental;

        /// <summary>
        /// State of provisioning
        /// </summary>
        [JsonProperty("provisioningState")]
        public string Status { get; set; } = string.Empty;

        /// <summary>
        /// Timestamp of deployment run
        /// </summary>
        [JsonProperty("timestamp")]
        public DateTime Timestamp { get; set; }

        /// <summary>
        /// Duration the deployment took (as a time string)
        /// </summary>
        [JsonProperty("duration")]
        public string Duration { get; set; } = string.Empty;

        /// <summary>
        /// Deployment correlation Id
        /// </summary>
        [JsonProperty("correlationId")]
        public string CorrelationId { get; set; } = string.Empty;

        /// <summary>
        /// Providers required for this deployment run
        /// </summary>
        [JsonProperty("providers")]
        public List<DeploymentProviderType> Providers { get; set; } = new List<DeploymentProviderType>();

        /// <summary>
        /// Output of the deployment run
        /// </summary>
        [JsonProperty("dependencies")]
        public List<object> Dependencies { get; set; } = new List<object>();

        /// <summary>
        /// Output of the deployment run
        /// </summary>
        [JsonProperty("outputs")]
        public Dictionary<string, object>? Output { get; set; } = new Dictionary<string, object>();

        /// <summary>
        /// Resource Uri to the resources generated by this deployment
        /// </summary>
        [JsonProperty("outputResources")]
        public List<KeyValuePair<string, string>> OutputResources { get; set; } = new List<KeyValuePair<string, string>>();

    }
}
